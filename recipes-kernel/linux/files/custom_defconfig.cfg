
# DRM Core and Helper Modules
CONFIG_DRM=y                         # Main DRM kernel infrastructure (required for any DRM-based graphics)
CONFIG_DRM_KMS_HELPER=y              # Helpers for Kernel Mode Setting (KMS) operations
CONFIG_DRM_GEM_DMA_HELPER=y          # Helper for graphics memory (GEM) and DMA management in DRM
CONFIG_DRM_FBDEV_EMULATION=y         # Legacy framebuffer emulation layer for DRM (fbdev interface compatibility)
CONFIG_HAS_IOMEM=y                   # Kernel support for memory-mapped IO (needed for graphics/video hardware)

# TinyDRM and Panel Drivers for ST7735R
CONFIG_DRM_TINYDRM=y                 # TinyDRM: DRM support for simple panels (like many SPI/parallel TFTs)
CONFIG_TINYDRM_ST7735R=y             # Enable TinyDRM driver for ST7735R LCDs (sometimes legacy, see below)
CONFIG_DRM_TINYDRM_ST7735R=y         # (Duplicate/variant for staging, depends on kernel version)
CONFIG_DRM_ST7735R=y                 # DRM driver for ST7735R panel (newer mainline kernel naming)
CONFIG_DRM_MIPI_DBI=y                # Support for MIPI DBI parallel/SPI panels (DRM infrastructure helper)
CONFIG_DRM_PANEL_SITRONIX_ST7735R=y  # Generic panel integration for Sitronix ST7735R (panel framework)

# SPI Bus Support and IMX SPI Driver
CONFIG_SPI=y                        # Core SPI framework in the kernel
CONFIG_SPI_MASTER=y                 # Enable support for SPI master (for drivers that initiate communication)
CONFIG_SPI_IMX=y                    # NXP/Freescale i.MX family SPI controller driver

# PWM Support and IMX TPM PWM Driver
CONFIG_PWM=y                        # Generic PWM subsystem and driver interface
CONFIG_PWM_IMX_TPM=y                # PWM driver for i.MX TPM timer/channel (platform-specific)

# Other Hardware Support
CONFIG_MBOX=y                       # Generic mailbox framework (hardware communication channels)
CONFIG_BACKLIGHT_CLASS_DEVICE=y     # Generic backlight device support (integration into Linux backlight sysfs)
CONFIG_USB_ETH=y                    # USB Ethernet gadget/host support (network over USB, often needed in embedded systems)
